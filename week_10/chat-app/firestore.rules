rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if the user is the owner of a document
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // Rules for rooms collection
    match /rooms/{roomId} {
      // Allow reading rooms if authenticated
      allow read: if isAuthenticated();
      
      // Allow creating rooms if authenticated and user sets themselves as creator
      allow create: if isAuthenticated() ;
      
      // Allow updating rooms only by the creator
      allow update: if isAuthenticated() && 
                     resource.data.createdBy == request.auth.uid;
      
      // Allow deleting any room during development
      allow delete: if isAuthenticated();
      
      // Rules for messages subcollection
      match /messages/{messageId} {
        // Allow reading messages if authenticated
        allow read: if isAuthenticated();
        
        // Allow creating messages if authenticated and sender field matches user email
        allow create: if isAuthenticated() && 
                       request.resource.data.sender == request.auth.token.email;
        
        // Allow users to update or delete only their own messages
        allow update, delete: if isAuthenticated() && 
                               resource.data.sender == request.auth.token.email;
      }
    }
    
    // Rules for users collection (if you add user profiles)
    match /users/{userId} {
      // Allow users to read any profile
      allow read: if isAuthenticated();
      
      // Allow users to create/update/delete only their own profile
      allow write: if isOwner(userId);
    }
  }
}
